[{"C:\\Users\\HP\\quantity-measurement\\src\\index.js":"1","C:\\Users\\HP\\quantity-measurement\\src\\reportWebVitals.js":"2","C:\\Users\\HP\\quantity-measurement\\src\\App.js":"3","C:\\Users\\HP\\quantity-measurement\\src\\pages\\Home.jsx":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":372,"mtime":1611219630665,"results":"8","hashOfConfig":"6"},{"size":4676,"mtime":1611219630732,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"15g08bx",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"C:\\Users\\HP\\quantity-measurement\\src\\index.js",[],["20","21"],"C:\\Users\\HP\\quantity-measurement\\src\\reportWebVitals.js",[],"C:\\Users\\HP\\quantity-measurement\\src\\App.js",[],"C:\\Users\\HP\\quantity-measurement\\src\\pages\\Home.jsx",["22","23","24"],"import React, {Component} from 'react';\r\nimport {AppBar, TextField, Select, MenuItem, FormLabel} from '@material-ui/core';\r\nimport './home.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport length from '../assets/length.png'\r\nimport temperature from '../assets/temperature.png'\r\nimport volumn from '../assets/volumn.png'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nclass Home extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            length: '',\r\n            lengthOne: '',\r\n        };\r\n    }\r\n\r\n    handleChange=(event)=>{\r\n        let length=event.target.value;\r\n        this.setState({\r\n            length:event.target.value\r\n        })\r\n        console.log(\"Length(From): \", length);\r\n    }\r\n\r\n    // handleChange=(event)=>{\r\n    //     let lengthOne=event.target.value;\r\n    //     this.setState({\r\n    //         lengthOne:event.target.value\r\n    //     })\r\n    //     console.log(\"Length(To): \", lengthOne);\r\n    // }\r\n\r\n    handleTemperature=()=>{\r\n        this.props.history.push('/temperature');\r\n    }\r\n\r\n    render(){\r\n        return(\r\n                <div className=\"homeContainer\">              \r\n                    <AppBar id=\"welcomeBar\">\r\n                        <h1>Welcome to Quantity Measurement</h1>\r\n                    </AppBar>           \r\n                    <div id=\"chooseType\">\r\n                    <label>CHOOSE TYPE</label>\r\n                    </div> \r\n                    <div className=\"converterCard\">\r\n                        <Card id=\"length\">\r\n                        <div>\r\n                            <img src={length}/>\r\n                        </div>\r\n                        <div>\r\n                        <FormLabel>Length</FormLabel>\r\n                        </div>\r\n                        </Card>\r\n                        <Card id=\"temperature\" onClick={this.handleTemperature}>\r\n                        <div>\r\n                            <img src={temperature}/>\r\n                        </div>\r\n                        <div>\r\n                        <FormLabel>Temperature</FormLabel>\r\n                        </div>\r\n                        </Card>\r\n                        <Card id=\"volumn\">\r\n                        <div>\r\n                            <img src={volumn}/>\r\n                        </div>\r\n                        <div>\r\n                        <FormLabel>Volumn</FormLabel>\r\n                        </div>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"calculationContainer\">\r\n                    <Card className=\"FromCardContainer\">                        \r\n                        <div id=\"fromLable\">\r\n                            <FormLabel>From</FormLabel>\r\n                        </div>\r\n                        <div id=\"From\">\r\n                            <div id=\"inputFrom\">\r\n                                <TextField id=\"TextFieldFrom\" type=\"number\" variant=\"outlined\" ></TextField>\r\n                            </div>\r\n                            <div id=\"selectFrom\">\r\n                                <Select id=\"FromDropdown\" value={this.state.length} onChange={this.handleChange}>\r\n                                    <MenuItem value=\"\"><em>None</em></MenuItem>\r\n                                    <MenuItem value={20}>Kilometre</MenuItem>\r\n                                    <MenuItem value={20}>Metres</MenuItem>\r\n                                    <MenuItem value={10}>Centimetres</MenuItem>\r\n                                    <MenuItem value={30}>Milimetre</MenuItem>\r\n                                    <MenuItem value={10}>Micrometre</MenuItem>\r\n                                    <MenuItem value={40}>Mile</MenuItem>\r\n                                    <MenuItem value={50}>Foot</MenuItem>\r\n                                    <MenuItem value={60}>Inch</MenuItem>\r\n                                </Select>   \r\n                            </div>\r\n                        </div>\r\n                        </Card>\r\n                        <Card>\r\n                        <div id=\"toLable\">\r\n                        <FormLabel>To</FormLabel>\r\n                        </div>\r\n                        <div id=\"To\">\r\n                            <div id=\"inputTo\">\r\n                                <TextField id=\"TextFieldTo\" type=\"number\" variant=\"outlined\" ></TextField>\r\n                            </div>\r\n                            <div id=\"selectTo\">\r\n                            <Select id=\"ToDropdown\">\r\n                                    <MenuItem value=\"\"><em>None</em></MenuItem>\r\n                                    <MenuItem value={100}>Kilometre</MenuItem>\r\n                                    <MenuItem value={200}>Metres</MenuItem>\r\n                                    <MenuItem value={100}>Centimetres</MenuItem>\r\n                                    <MenuItem value={300}>Milimetre</MenuItem>\r\n                                    <MenuItem value={100}>Micrometre</MenuItem>\r\n                                    <MenuItem value={400}>Mile</MenuItem>\r\n                                    <MenuItem value={500}>Foot</MenuItem>\r\n                                    <MenuItem value={600}>Inch</MenuItem>\r\n                                </Select>   \r\n                            </div>    \r\n                        </div>\r\n                        </Card>\r\n                    </div>                     \r\n                </div>  \r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Home);\r\n",{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":51,"column":29,"nodeType":"31","endLine":51,"endColumn":48},{"ruleId":"29","severity":1,"message":"30","line":59,"column":29,"nodeType":"31","endLine":59,"endColumn":53},{"ruleId":"29","severity":1,"message":"30","line":67,"column":29,"nodeType":"31","endLine":67,"endColumn":48},"no-native-reassign",["32"],"no-negated-in-lhs",["33"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]